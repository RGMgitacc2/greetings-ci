# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" , "changelog" ]
  pull_request:
    branches: [ "main", "changelog" ]

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Conventional Changelog Action
  # You may pin to the exact commit or the version.
  # uses: TriPSs/conventional-changelog-action@c989d559ea64cf4c21dc9c795834f219cfc66e5d
  uses: TriPSs/conventional-changelog-action@v3.17.1
  with:
    # Github token
    github-token: # optional, default is ${{ github.token }}
    # Commit message to use
    git-message: # optional, default is chore(release): {version}
    # The git user.name to use for the commit
    git-user-name: # optional, default is Conventional Changelog Action
    # The git user.email to use for the commit
    git-user-email: # optional, default is conventional.changelog.action@github.com
    # The git pull method used when pulling all changes from remote
    git-pull-method: # optional, default is --ff-only
    # Should all the git changes be push
    git-push: # optional, default is true
    # The git branch to be pushed
    git-branch: # optional, default is ${{ github.ref }}
    # The preset from Conventional Changelog to use
    preset: # optional, default is angular
    # Prefix that is used for the git tag
    tag-prefix: # optional, default is v
    # File to output the changelog to
    output-file: # optional, default is CHANGELOG.md
    # Number of releases to preserve in changelog
    release-count: # optional, default is 5
    # The path to the file that contains the version to bump (supports comma-separated list of file paths)
    version-file: # optional, default is ./package.json
    # The place inside the version file to bump
    version-path: # optional, default is version
    # Do not pull the repo before tagging. Ensure you full cloned the repo in the first place to get tags
    skip-git-pull: # optional, default is false
    # Do nothing when the changelog from the latest release is empty
    skip-on-empty: # optional, default is true
    # Do not update the version file
    skip-version-file: # optional, default is false
    # Do create a release commit
    skip-commit: # optional, default is false
    # Path to the pre-commit script file
    pre-commit: # optional
    # The fallback version, if no older one can be detected, or if it is the first one
    fallback-version: # optional, default is 0.1.0
    # Path to the conventional changelog config file. If set, the preset setting will be ignored
    config-file-path: # optional
    # Path to the pre-changelog-generation script file
    pre-changelog-generation: # optional
    # Git Url
    git-url: # optional, default is github.com
    # Path filter for the logs. If set, only commits that match the path filter will be considered
    git-path: # optional, default is 
    # Adds [skip ci] to commit message, to avoid triggering a new build
    skip-ci: # optional, default is true
    # Adds the generated changelog as Action Summary
    create-summary: # optional, default is false
    # Marks the release as pre-release
    pre-release: # optional, default is false
    # The identifier to use for pre-releases
    pre-release-identifier: # optional, default is rc
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2.2.1
      with:
        arguments: build
